grafana:
  adminUser: admin
  adminPassword: admin
  service:
    type: ClusterIP
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.darshanm.space
    path: /
    pathType: Prefix
    tls:
      - hosts:
          - grafana.darshanm.space
        secretName: grafana-darshanm-space-tls

prometheus:
  service:
    type: ClusterIP
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - prometheus.darshanm.space
    path: /
    pathType: Prefix
    tls:
      - hosts:
          - prometheus.darshanm.space
        secretName: prometheus-darshanm-space-tls
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    ruleSelector:
      matchLabels:
        role: alert-rules
        release: prometheus
    


alertmanager:
  enabled: true
  config:
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'idarshankm@gmail.com'
      smtp_auth_username: 'idarshankm@gmail.com'
      smtp_auth_password: '${SMTP_PASS}'  # ENV variable injected below
    route:
      receiver: email-alert
    receivers:
      - name: email-alert
        email_configs:
          - to: 'idarshankm@gmail.com'
            send_resolved: true
  extraEnv:
    - name: SMTP_PASS
      valueFrom:
        secretKeyRef:
          name: alertmanager-config
          key: smtp_pass
  service:
    type: ClusterIP
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - alertmanager.darshanm.space
    path: /
    pathType: Prefix
    tls:
      - hosts:
          - alertmanager.darshanm.space
        secretName: alertmanager-darshanm-space-tls


pipeline {
  agent any

  environment {
    HELM_RELEASE_NAME = "monitoring"
    HELM_NAMESPACE = "monitoring"
    VALUES_FILE = "helm/monitoring/values-monitoring.yaml"
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/Darshanm416/ecommerce-devops-project.git', branch: 'main'
      }
    }

    stage('Add Helm Repo') {
      steps {
        sh '''
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
        '''
      }
    }

    stage('Deploy Monitoring Stack') {
      steps {
        sh '''
          helm upgrade --install ${HELM_RELEASE_NAME} prometheus-community/kube-prometheus-stack \
            --namespace ${HELM_NAMESPACE} --create-namespace \
            -f ${VALUES_FILE} \
            --wait
        '''
      }
    }

     stage('Deploy MongoDB Exporter') {
      steps {
        sh '''
          helm upgrade --install mongodb-exporter prometheus-community/prometheus-mongodb-exporter \
            --namespace ${HELM_NAMESPACE} \
            --set mongodb.uri="mongodb://mongo.mongodb.svc.cluster.local:27017/ecomdb" \
            --set serviceMonitor.enabled=true \
            --set serviceMonitor.labels.release=monitoring \
            --wait
        '''
      }
    }

    stage('Deploy Redis Exporter') {
      steps {
        sh '''
          helm upgrade --install redis-exporter prometheus-community/prometheus-redis-exporter \
            --namespace ${HELM_NAMESPACE} \
            --set redisAddress=redis://redis-master:6379 \
            --set serviceMonitor.enabled=true \
            --set serviceMonitor.labels.release=monitoring \
            --wait
        '''
      }
    }
  }

  post {
    success {
      echo "[SUCCESS] Monitoring stack deployed successfully!"
    }
    failure {
      echo "[FAILURE] Monitoring deployment failed!"
    }
  }
}

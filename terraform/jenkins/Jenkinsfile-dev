pipeline {
    agent any

    environment {
        TF_WORKDIR = "terraform/environments/dev"
        TF_VAR_FILE = "terraform.tfvars"
    }

    options {
        timestamps()
        ansiColor('xterm')
    }

    stages {

        stage('Checkout') {
            steps {
                echo "📦 Checking out source code..."
                checkout scm
            }
        }

        stage('Terraform Init') {
            steps {
                dir("${TF_WORKDIR}") {
                    echo "🚀 Running terraform init..."
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir("${TF_WORKDIR}") {
                    echo "🔍 Validating Terraform code..."
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir("${TF_WORKDIR}") {
                    echo "📄 Planning Terraform changes..."
                    sh "terraform plan -var-file=${TF_VAR_FILE}"
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { return params.APPLY_CHANGES == true }
            }
            steps {
                dir("${TF_WORKDIR}") {
                    echo "✅ Applying Terraform changes..."
                    sh "terraform apply -auto-approve -var-file=${TF_VAR_FILE}"
                }
            }
        }
    }

    parameters {
        booleanParam(
            name: 'APPLY_CHANGES',
            defaultValue: false,
            description: 'Check to apply Terraform changes (dangerous in prod!)'
        )
    }

    post {
        failure {
            echo "🔥 Terraform job failed"
        }
        success {
            echo "✅ Terraform job completed successfully"
        }
    }
}
